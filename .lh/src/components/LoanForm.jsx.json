{
    "sourceFile": "src/components/LoanForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748255358718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748255358718,
            "name": "Commit-0",
            "content": "import React, { useState, useContext } from 'react';\r\nimport { Form, message, Row, Col, DatePicker, TimePicker, Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport FormInput from './FormInput';\r\nimport FormButton from './FormButton';\r\nimport supabase from '../services/supabaseClient';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport dayjs from 'dayjs';\r\n\r\nconst EventForm = () => {\r\n  const [form] = Form.useForm();\r\n  const { loading, setLoading, user } = useContext(AuthContext);\r\n  const [formKey, setFormKey] = useState(0);\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const categories = [\r\n    { value: 'tech', label: 'Technology' },\r\n    { value: 'education', label: 'Education' },\r\n    { value: 'entertainment', label: 'Entertainment' },\r\n    { value: 'business', label: 'Business' },\r\n    { value: 'health', label: 'Health & Wellness' },\r\n    { value: 'sports', label: 'Sports' },\r\n    { value: 'other', label: 'Other' },\r\n  ];\r\n\r\n  const beforeUpload = (file) => {\r\n    const isImage = file.type.startsWith('image/');\r\n    if (!isImage) {\r\n      message.error('You can only upload image files!');\r\n      return Upload.LIST_IGNORE;\r\n    }\r\n    const isLt5MB = file.size / 1024 / 1024 < 5;\r\n    if (!isLt5MB) {\r\n      message.error('Image must be smaller than 5MB!');\r\n      return Upload.LIST_IGNORE;\r\n    }\r\n    return false; // Prevent automatic upload\r\n  };\r\n\r\n  const handleImageChange = (info) => {\r\n    if (info.file.status === 'done') {\r\n      setImageFile(info.file.originFileObj);\r\n    } else if (info.file.status === 'removed') {\r\n      setImageFile(null);\r\n    }\r\n  };\r\n\r\n  const uploadImageToSupabase = async (file) => {\r\n    if (!file) return null;\r\n    \r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Date.now()}-${Math.random().toString(36).substring(2, 9)}.${fileExt}`;\r\n    const filePath = `${user.id}/${fileName}`;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .storage\r\n        .from('event-images')\r\n        .upload(filePath, file, {\r\n          cacheControl: '3600',\r\n          upsert: false\r\n        });\r\n\r\n      if (error) throw error;\r\n\r\n      // Get public URL\r\n      const { data: { publicUrl } } = supabase\r\n        .storage\r\n        .from('event-images')\r\n        .getPublicUrl(filePath);\r\n\r\n      return publicUrl;\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      message.error('Failed to upload image. Please try again.');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (loading) return;\r\n      setLoading(true);\r\n      \r\n      const values = await form.validateFields();\r\n      \r\n      // Combine date and time\r\n      const eventDateTime = dayjs(values.date)\r\n        .hour(values.time.hour())\r\n        .minute(values.time.minute())\r\n        .toISOString();\r\n\r\n      // Upload image if exists\r\n      let imageUrl = null;\r\n      if (imageFile) {\r\n        imageUrl = await uploadImageToSupabase(imageFile);\r\n        console.log('Image URL:', imageUrl);\r\n      }\r\n\r\n      const submissionData = {\r\n        title: values.title,\r\n        description: values.description,\r\n        date_time: eventDateTime,\r\n        location: values.location,\r\n        category: values.category,\r\n        image_url: imageUrl,\r\n        user_id: user.id, // Changed from 'id' to 'user_id' for better clarity\r\n      };\r\n\r\n      console.log('Submitting data:', submissionData);\r\n\r\n      // Submit form data\r\n      const { error } = await supabase\r\n        .from('events') // Changed from 'event-form-request' to 'events'\r\n        .insert([submissionData]);\r\n\r\n      if (error) throw error;\r\n\r\n      message.success('Event created successfully!');\r\n      form.resetFields();\r\n      setImageFile(null);\r\n      setFormKey(prev => prev + 1);\r\n\r\n    } catch (error) {\r\n      console.error('Submission error:', error);\r\n      message.error(error.message || 'Failed to create event. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-form-container\">\r\n      <h2 style={{ marginBottom: 24 }}>Create New Event</h2>\r\n\r\n      <Form \r\n        key={formKey}\r\n        form={form} \r\n        layout=\"vertical\"\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <FormInput \r\n              label=\"Title\" \r\n              name=\"title\" \r\n              rules={[{ required: true, message: 'Please enter event title' }]} \r\n              type=\"text\" \r\n            />\r\n            \r\n            <FormInput \r\n              label=\"Description\" \r\n              name=\"description\" \r\n              rules={[{ required: true, message: 'Please enter event description' }]} \r\n              type=\"textarea\" \r\n              rows={4}\r\n            />\r\n\r\n            <Form.Item\r\n              label=\"Event Image\"\r\n              name=\"image\"\r\n              rules={[{ required: false }]}\r\n            >\r\n              <Upload\r\n                name=\"image\"\r\n                listType=\"picture\"\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleImageChange}\r\n                maxCount={1}\r\n                accept=\"image/*\"\r\n                fileList={imageFile ? [{\r\n                  uid: '1',\r\n                  name: imageFile.name,\r\n                  status: 'done',\r\n                  originFileObj: imageFile\r\n                }] : []}\r\n              >\r\n                <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n              </Upload>\r\n            </Form.Item>\r\n          </Col>\r\n          \r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Date\"\r\n              name=\"date\"\r\n              rules={[{ required: true, message: 'Please select event date' }]}\r\n            >\r\n              <DatePicker style={{ width: '100%' }} />\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n              label=\"Time\"\r\n              name=\"time\"\r\n              rules={[{ required: true, message: 'Please select event time' }]}\r\n            >\r\n              <TimePicker style={{ width: '100%' }} format=\"HH:mm\" />\r\n            </Form.Item>\r\n            \r\n            <FormInput \r\n              label=\"Location\" \r\n              name=\"location\" \r\n              rules={[{ required: true, message: 'Please enter event location' }]} \r\n              type=\"text\" \r\n            />\r\n            \r\n            <FormInput \r\n              label=\"Category\" \r\n              name=\"category\" \r\n              rules={[{ required: true, message: 'Please select event category' }]} \r\n              type=\"select\" \r\n              options={categories}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item style={{ marginTop: 24 }}>\r\n          <FormButton \r\n            type=\"primary\" \r\n            style={{ background: 'black' }}\r\n            onClick={handleSubmit}\r\n            loading={loading}\r\n          >\r\n            Create Event\r\n          </FormButton>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <style jsx>{`\r\n        .event-form-container {\r\n          max-width: 800px;\r\n          margin: 0 auto;\r\n          padding: 24px;\r\n          background: #fff;\r\n          border-radius: 8px;\r\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n        .ant-upload.ant-upload-select-picture-card {\r\n          width: 100%;\r\n          margin-right: 0;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventForm;"
        }
    ]
}